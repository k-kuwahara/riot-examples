<todo>
  <div class="app-header">
    <img src="https://riot.js.org/img/logo/riot-logo.svg" alt="riot logo" class="logo">
  </div>

  <div id="container">
    <h1>{ props.message }</h1>

    <todo-form
      observable={obs}
      nextId={state.nextId}
      hasDoneTodo={state.hasDoneTodo}
    />

    <h4>todo list</h4>
    <ul>
      <li each={ todo in state.todoList } key={ todo.id }>
        <label class={ todo.done ? 'completed' : null }>
          <input
            type="checkbox"
            checked={ todo.done }
            onclick={ () => toggle(todo) }
          />
          { todo.title }
        </label>
        <button class="danger" onclick={ () => deleteTodo(todo)} >
          delete
        </button>
      </li>
    </ul>
    <p if={ state.todoList.length === 0 }>No Todos</p>
  </div>

  <script>
    export default {
      state: {
        todoList: [],
        hasDoneTodo: false,
        nextId: 1
      },
      onBeforeMount(props, state) {
        state.todoList = props.todoList
        state.nextId = props.nextId
        this.updateHasDoneTodo()
        this.obs = observable(this)
      },
      onMounted() {
        this.on('add todo', (newTask) => {
          this.updateHasDoneTodo()
          this.update({
            todoList: [
              ...this.state.todoList,
              {
                id: this.state.nextId,
                ...newTask
              }
            ],
            nextId: this.state.nextId + 1
          })
        })
        this.on('delete done todos', () => {
          this.state.todoList
            = this.state.todoList.filter(item => item.done !== true)
          this.state.hasDoneTodo = false
          this.update()
        })
      },
      toggle(todo) {
        todo.done = !todo.done
        this.updateHasDoneTodo()
        this.trigger('toggle todo', this.state.hasDoneTodo)
        this.update()
      },
      updateHasDoneTodo() {
        this.state.hasDoneTodo
            = this.state.todoList.filter(item => item.done === true).length > 0
              ? true
              : false
      },
      deleteTodo(todo) {
        if (window.confirm('本当に削除してもよろしいですか？')) {
          this.state.todoList
            = this.state.todoList.filter(item => item.id !== todo.id)
          this.updateHasDoneTodo()
          this.update()
        }
      }
    }
  </script>
</todo>
