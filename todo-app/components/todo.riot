<todo>
  <div class="app-header">
    <img src="https://riot.js.org/img/logo/riot-logo.svg" alt="riot logo" class="logo">
  </div>
  <div id="container">
    <h1>{ props.message }</h1>

    <form onsubmit={ addTask }>
      <input
        name="todo"
        value=""
        oninput={ input }
        placeholder="please input task" />
      <button disabled={ !state.isInput }>
        Add #{ state.todoList.length + 1 }
      </button>
      <button
        class="danger"
        disabled={ !state.hasDoneTodo }
        onclick={ deleteDoneTasks }
      >
        delete completed
      </button>
    </form>


    <h4>todo list</ht>
    <ul>
      <li each={ todo in state.todoList } key={ todo.id }>
        <label class={ todo.done ? 'completed' : null }>
          <input
            type="checkbox"
            checked={ todo.done }
            onclick={ () => toggle(todo) }
          />
          { todo.title }
        </label>
        <button class="danger" onclick={ () => deleteTask(todo) }>
          delete
        </button>
      </li>
    </ul>
  </div>

  <script>
    export default {
      state: {
        todoList: [],
        isInput: false,
        hasDoneTodo: false
      },
      onBeforeMount(props, state) {
        state.todoList = props.todoList
        this.updateHasDoneTodo()
      },
      addTask(e) {
        e.preventDefault()
        if (e.target.todo.value) {
          this.state.isInput = false
          this.updateHasDoneTodo()
          this.update({
            todoList: [
              ...this.state.todoList,
              {
                id: this.state.todoList.length + 1,
                title: e.target.todo.value,
                done: false
              }
            ]
          })
          e.target.todo.value = ""
        }
      },
      input(e) {
        this.update({
          isInput: e.target.value
        })
      },
      toggle(todo) {
        todo.done = !todo.done
        this.updateHasDoneTodo()
        this.update()
      },
      updateHasDoneTodo() {
        let doneCount = 0
        this.state.todoList.forEach((todo) => {
          if (todo.done) doneCount++
        })
        if (doneCount > 0) this.state.hasDoneTodo = true
        else this.state.hasDoneTodo = false
      },
      deleteTask(todo) {
        if (window.confirm('本当に削除してもよろしいですか？')) {
          this.state.todoList
            = this.state.todoList.filter(item => item.id !== todo.id)
          this.updateHasDoneTodo()
          this.update()
        }
      },
      deleteDoneTasks() {
        if (window.confirm('本当に全ての todo を削除してもよろしいですか？')) {
          this.state.todoList
            = this.state.todoList.filter(item => item.done !== true)
          this.state.hasDoneTodo = false
          this.update()
        }
      }
    }
  </script>
</todo>
