<todo>
  <div class="app-header">
    <img src="https://riot.js.org/img/logo/riot-logo.svg" alt="riot logo" class="logo">
  </div>

  <div id="container">
    <h1>{ props.message }</h1>

    <todo-form
      observable={obs}
      nextId={state.nextId}
      hasDoneTodo={state.hasDoneTodo}
    />
    <todo-list observable={obs} todoList={state.todoList} />
  </div>

  <script>
    export default {
      state: {
        todoList: [],
        hasDoneTodo: false,
        nextId: 1
      },
      onBeforeMount(props, state) {
        state.todoList = props.todoList
        state.nextId = props.nextId
        this.updateHasDoneTodo()
        this.obs = observable(this)
      },
      onMounted() {
        this.on('add todo', (newTask) => {
          this.updateHasDoneTodo()
          this.update({
            todoList: [
              ...this.state.todoList,
              {
                id: this.state.nextId,
                ...newTask
              }
            ],
            nextId: this.state.nextId + 1
          })
        })
        this.on('delete done todos', () => {
          this.state.todoList
            = this.state.todoList.filter(item => item.done !== true)
          this.state.hasDoneTodo = false
          this.update()
        })
        this.on('delete todo', (filteredTodoList) => {
          this.state.todoList = filteredTodoList
          this.updateHasDoneTodo()
          this.update()
        })
        this.on('toggle todo', (updatedList) => {
          this.state.todoList = updatedList
          this.updateHasDoneTodo()
          this.update()
        })
      },
      updateHasDoneTodo() {
        this.state.hasDoneTodo
            = this.state.todoList.filter(item => item.done === true).length > 0
              ? true
              : false
      }
    }
  </script>
</todo>
