<app>
  <h2>{ props.title }</h2>
  <div id="demo">
    <template each={ branch in props.branches }>
      <input type="radio"
        id={ branch }
        value={ branch }
        name="branch"
        onclick={ selectBranch }>
      <label for={ branch }>{ branch }</label>
    </template>
    <p>riotjs/riot@{ state.currentBranch }</p>
    <ul>
      <li each={ record in state.commits }>
        <a href={ record.html_url } target="_blank" class="commit">{ record.sha.slice(0, 7) }</a>
        - <span class="message">{ truncate(record.commit.message) }</span><br>
        by <span class="author"><a href="record.author.html_url" target="_blank">{ record.commit.author.name }</a></span>
        at <span class="date">{ formatDate(record.commit.author.date)}</span>
      </li>
    </ul>
  </div>

  <script>
    const apiURL = "https://api.github.com/repos/riot/riot/commits?per_page=5&sha="

    export default {
      state: {
        currentBranch: 'master',
        commits: null
      },
      onBeforeMount() {
        this.fetchData()
      },
      selectBranch(e) {
        this.state.currentBranch = e.target.value
        this.fetchData()
      },
      truncate(v) {
        const newline = v.indexOf('\n')
        return newline > 0 ? v.slice(0, newline) : v
      },
      formatDate(v) {
        return v.replace(/T|Z/g, ' ')
      },
      fetchData() {
        const xhr = new XMLHttpRequest()
        xhr.open('GET', apiURL + this.state.currentBranch)
        xhr.send()
        xhr.onload = () => {
          this.state.commits = JSON.parse(xhr.responseText)
          this.update()
        }
      }
    }
  </script>
</app>